name: Run Tests

on:
  push:
    branches:
      - main  # Set this to your deployment branch

jobs:
    run-tests:
      runs-on: ubuntu-20.04
      steps:
        - name: Checkout repository
          uses: actions/checkout@v3
        - name: Setup Python 3.11
          uses: actions/setup-python@v3
          with:
            python-version: '3.11.4'
        - name: Install Dependencies
          run: pip install -r requirements.txt
        - name: Run tests
          run: pytest
  
    deploy-on-droplet:
      needs: run-tests
      runs-on: ubuntu-latest
      steps:
        - name: Set up SSH
          run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.SSH_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            ssh-keyscan -H ${{ secrets.DROPLET_IP }} >> ~/.ssh/known_hosts
         
        - name: Prepare Environment and Update Branch
          run: |
            ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.DROPLET_IP }} "\
              cd /home/farm && \
              git fetch --all && \
              git stash push -m 'Auto-stashing changes before switching branches' && \
              git checkout main || git branch main origin/main && \
              git pull origin main"


        - name: Configure Git and Commit Changes
          run: |
            ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.DROPLET_IP }} "\
              cd /home/farm && \
              git config user.name 'IamTravolta' && \
              git config user.email 'travoltaogbee@hotmail.nl' && \
              git add . && \
              git commit -m 'Committing changes' && \
              git push origin main"


        - name: Commit and Push Changes If Any
          run: |
            ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.DROPLET_IP }} "\
              cd /home/farm && \
              git config user.name 'IamTravolta' && \
              git config user.email 'travoltaogbee@hotmail.nl' && \
              git add . && \
              git diff --cached --exit-code && \
              git commit -m 'Committing changes' || echo 'No changes to commit' && \
              git push origin main || echo 'No changes to push'"
            
